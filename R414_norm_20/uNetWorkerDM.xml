<?xml version="1.0" encoding="utf-8"?>
<namespace name="uNetWorkerDM">
  <class name="IClientNetWorker">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
    </ancestor>
    <members>
      <field name="FClientState" type="TClientState" visibility="private" />
      <field name="FClientStateChangedEvent" type="TClientStateChangedEvent" visibility="private" />
      <field name="FRecievedTaskParamsR414" type="TEventKeyPair" visibility="private" />
      <function name="IsConnect" visibility="public" procflags="abstract virtual">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="TryConnect" visibility="public" procflags="abstract virtual">
        <parameters>
          <parameter name="UserName" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Disconnect" visibility="public" procflags="abstract virtual">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="SendParams" visibility="public" procflags="abstract virtual">
        <parameters>
          <parameter name="Key" type="string" />
          <parameter name="Value" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="SendTaskParams" visibility="public" procflags="abstract virtual">
        <parameters>
          <parameter name="Key" type="string" />
          <parameter name="Value" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="SendMessage" visibility="public" procflags="abstract virtual">
        <parameters>
          <parameter name="Value" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <property name="ClientState" visibility="public" read="FClientState" write="FClientState" type="TClientState" />
      <event name="ClientStateChangedEvent" visibility="public" read="FClientStateChangedEvent" write="FClientStateChangedEvent" type="TClientStateChangedEvent" />
      <event name="OnRecievedTaskParamsR414" visibility="public" read="FRecievedTaskParamsR414" write="FRecievedTaskParamsR414" type="TEventKeyPair" />
    </members>
  </class>
  <class name="TClientNetWorker">
    <ancestor name="IClientNetWorker" namespace="uNetWorkerDM">
      <methodref name="IsConnect" visibility="public" procflags="abstract virtual" />
      <methodref name="TryConnect" visibility="public" procflags="abstract virtual" />
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual" />
      <methodref name="SendParams" visibility="public" procflags="abstract virtual" />
      <methodref name="SendTaskParams" visibility="public" procflags="abstract virtual" />
      <methodref name="SendMessage" visibility="public" procflags="abstract virtual" />
      <propertyref name="ClientState" visibility="public" />
      <eventref name="ClientStateChangedEvent" visibility="public" />
      <eventref name="OnRecievedTaskParamsR414" visibility="public" />
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
      </ancestor>
    </ancestor>
    <members>
      <field name="TCPClient" type="TIdTCPClient" visibility="private" />
      <field name="ResponseListener" type="TResponseListener" visibility="private" />
      <procedure name="OnResponse" visibility="private">
        <devnotes>
           <summary>
             Обрабатывает событие 'Пришёл ответ сервера'
           </summary>
        </devnotes>
        <parameters>
          <parameter name="strResponse" type="string" />
        </parameters>
      </procedure>
      <procedure name="ProcessMessage" visibility="private">
        <devnotes>
           <summary>
             Обрабатывает сообщение, полученное от сервера
           <param name = "strMessage"> Полученное от сервера сообщение </param>
           </summary>
        </devnotes>
        <parameters>
          <parameter name="strMessage" type="string" />
        </parameters>
      </procedure>
      <function name="IsConnect" visibility="public" procflags="override">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="TryConnect" visibility="public" procflags="override">
        <devnotes>
           <summary>
             Пробует подключить клиент к серверу и залогиниться под именем UserName
           <param name = "strUserName"> Имя пользователя (позывной станции) </param>
           </summary>
        </devnotes>
        <parameters>
          <parameter name="strUserName" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Disconnect" visibility="public" procflags="override">
        <devnotes>
           <summary>
             Отключает от клиент от сервера
           </summary>
        </devnotes>
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="SendParams" visibility="public" procflags="override">
        <parameters>
          <parameter name="Key" type="string" />
          <parameter name="Value" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="SendTaskParams" visibility="public" procflags="override">
        <parameters>
          <parameter name="Key" type="string" />
          <parameter name="Value" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="SendMessage" visibility="public" procflags="override">
        <parameters>
          <parameter name="Value" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <constructor name="Create" visibility="public">
        <parameters>
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
    </members>
  </class>
  <const name="CLIENT_STATION_R414" type="string">
    <value>
      r414
    </value>
  </const>
  <const name="CLIENT_CROSS" type="string">
    <value>
      cross
    </value>
  </const>
  <const name="CLIENT_STATION_R415" type="string">
    <value>
      r415
    </value>
  </const>
  <const name="CLIENT_STATION_R414_TASK" type="string">
    <value>
      r414_task
    </value>
  </const>
  <const name="STATION_STATUS_MAIN" type="string">
    <value>
      main
    </value>
  </const>
  <const name="STATION_STATUS_SUBORDINATE" type="string">
    <value>
      subordinate
    </value>
  </const>
</namespace>
